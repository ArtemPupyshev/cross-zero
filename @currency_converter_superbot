# @currency_converter_superbot(проект для SkillFactory С5.6. 'Контрольный проект')

import requests
import json
import telebot
TOKEN = '6294021873:AAEldaTH1T4Ik2k6tbcSPeXQVnnudbCu4vc'

class APIException(Exception):
    def __init__(self, message):
        self.message = message

class CurrencyConverter:
    @staticmethod
    def get_price(base: str, quote: str, amount: float) -> float:
        url = f"https://api.exchangerate-api.com/v4/latest/{base}"
        response = requests.get(url)

        if response.status_code != 200:
            raise APIException(f"Не удалось получить курс {base}. Статус-код: {response.status_code}")

        try:
            data = response.json()
            total_base = data["rates"][quote] * amount
            return round(total_base, 2)
        except KeyError:
            raise APIException(f"Не удалось обработать валюту {quote}")

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    text = "Привет! Я бот-конвертер валют и я могу помочь тебе узнать курс валют.\n" \
           "Для получения курса валют напиши мне сообщение в формате:\n" \
           "<имя валюты, цену которой ты хочешь узнать> <имя валюты, в которой надо узнать цену первой валюты> " \
           "<количество первой валюты>\n" \
           "Для получения списка всех доступных валют используй команду /values"
    bot.reply_to(message, text)

@bot.message_handler(commands=["values"])
def send_values(message):
    text = "Доступные валюты:\n" \
           "USD - Доллар США\n" \
           "EUR - Евро\n" \
           "RUB - Российский рубль"
    bot.reply_to(message, text)

@bot.message_handler(content_types=["text"])
def get_price(message):
    try:
        base, quote, amount = message.text.split(" ")

        result = CurrencyConverter.get_price(base.upper(), quote.upper(), float(amount))
    except APIException as e:
        bot.reply_to(message, f"Ошибка обработки запроса: {e.message}")
    except ValueError:
        bot.reply_to(message, "Ошибка обработки запроса. Неверно введено количество валюты.")
    except Exception:
        bot.reply_to(message, "Ошибка обработки запроса.")
    else:
        text = f"{amount} {base.upper()} = {result} {quote.upper()}"
        bot.reply_to(message, text)

bot.polling(none_stop=True)
